package com.rehlati.services;

import java.io.Serializable;
import java.rmi.RemoteException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.view.ViewScoped;

import NET.webserviceX.www.LatLonDate;
import NET.webserviceX.www.SunSetRiseServiceSoapProxy;

import com.rehlati.ejb.RehlatiEJB;
import com.rehlati.ejb.util.RehlatiConfiguration;


/*
 * @author alias
 */

@ManagedBean(name="sunServiceAction")
@ViewScoped
public class SunServiceAction implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3889859617234059038L;
	
	private RehlatiEJB rehlatiEJB = new RehlatiEJB();
	
	private Date tripDate;
	
	 @PostConstruct
	    public void init() {
	    	System.out.println("SunServiceAction.init()");
	    }


		 /**
	     * The method in the action that will do the work!
	     */
		public void search(){
			System.out.println("SunServiceAction.search() ...  Here we go!");

			Calendar cal = Calendar.getInstance();
			cal.setTime(getTripDate());
			
			int year = cal.get(Calendar.YEAR);
			int month = cal.get(Calendar.MONTH);
			int day = cal.get(Calendar.DAY_OF_MONTH);
			
	    	SunSetRiseServiceSoapProxy sunService = new SunSetRiseServiceSoapProxy("http://www.webservicex.net/sunsetriseservice.asmx");
	    	
	    	//fill the request
	    	LatLonDate serviceRequest = new LatLonDate();
	    	serviceRequest.setLatitude(0);
	    	serviceRequest.setLongitude(0);
	    	serviceRequest.setTimeZone(0);
	    	serviceRequest.setDay(day);
	    	serviceRequest.setMonth(month);
	    	serviceRequest.setYear(year);
	    	serviceRequest.setSunRiseTime(0);

	    	LatLonDate serviceResponse = new LatLonDate();
	    	//call the service and get the needed response
	    	serviceResponse = sunService.getSunSetRiseTime(serviceRequest);

  	
			float sunrise = time.getSunRiseTime();
			Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
			calendar.set(Calendar.HOUR_OF_DAY, 0);
			calendar.add(Calendar.HOUR_OF_DAY, (int) sunrise);
			calendar.set(Calendar.MINUTE, ((int)sunrise * 60) % 60);
			calendar.set(Calendar.SECOND, ((int)sunrise * 3600) % 3600);
			//Then display the date in the timezone you want with a DateFormat:

			DateFormat fmt = new SimpleDateFormat();
			fmt.setTimeZone(TimeZone.getTimeZone("Europe/Paris")); 
			System.out.println(fmt.format(calendar.getTime()));
			
			System.out.println("SunServiceAction.search() sunrise time" + time.getSunRiseTime());
			
		}


		public Date getTripDate() {
			return tripDate;
		}


		public void setTripDate(Date tripDate) {
			this.tripDate = tripDate;
		}

	

	 
	    
}
